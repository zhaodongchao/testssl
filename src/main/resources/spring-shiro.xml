<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 配置权限管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="sessionManager" ref="sessionManager"/>
        <!-- ref对应我们写的realm  MyShiro -->
        <property name="realm" ref="myJdbcRealm"/>
        <!-- 使用下面配置的缓存管理器-->
        <property name="cacheManager" ref="redisCacheManager"/>
    </bean>
    <bean id="loginFormFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
    </bean>
    <!-- 配置shiro的过滤器工厂类，id- shiroFilter要和我们在web.xml中配置的过滤器一致 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 调用我们配置的权限管理器 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 配置我们的登录请求地址 -->
        <property name="loginUrl" value="/index/login"/>
        <!-- 配置我们在登录页登录成功后的跳转地址，如果你访问的是非/login地址，则跳到您访问的地址-->
        <property name="successUrl" value="/index/login"/>
        <property name="filters">
            <map>
                <entry key="authc" value-ref="loginFormFilter"/>
            </map>
        </property>
        <!-- 权限配置 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- anon表示此地址不需要任何权限即可访问,authc表示只有通过表单登录的用户才能访问/authc/下的资源 -->
                 /css/**=anon
                 /images/**=anon
                 /static/**=anon

                <!--user配置记住我或认证通过可以访问的地址-->
                /login_out=logout
                /**=authc
            </value>
        </property>
    </bean>
    <!-- 項目自定义的Realm, 所有accountService依赖的dao都需要用depends-on声明 -->
    <bean id="myJdbcRealm" class="com.security.core.MyJdbcRealm" depends-on="userDao">
        <property name="cachingEnabled" value="true"/>
        <property name="authorizationCachingEnabled" value="true"/>
    </bean>
    <!-- 用户授权信息Cache, 采用EhCache
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache-shiro.xml"/>
    </bean>
    -->
    <bean id="redisCacheManager" class="com.security.core.redis.RedisCacheManager">
        <property name="redisManager" ref="redisManager"/>
    </bean>
    <!-- sessionManager start-->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 设置全局会话超时时间，默认20分钟(1200000) -->
        <property name="globalSessionTimeout" value="1200000" />
        <!-- 是否在会话过期后会调用SessionDAO的delete方法删除会话 默认true -->
        <property name="deleteInvalidSessions" value="true"/>
        <!-- 会话验证器调度时间 -->
        <property name="sessionValidationInterval" value="1200000" />
        <!-- session存储的实现 -->
        <property name="sessionDAO" ref="sessionRedisDao"/>
        <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
        <property name="sessionIdCookie" ref="sharesession" />
        <!-- 定时检查失效的session -->
        <property name="sessionValidationSchedulerEnabled" value="true" />
    </bean>
    <bean id="sessionRedisDao" class="com.security.core.redis.SessionRedisDao">
        <property name="redisManager" ref="redisManager"/>
    </bean>
    <bean id="redisManager" class="com.security.core.redis.RedisManager"  depends-on="redisTemplate">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>
    <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
    <bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- cookie的name,对应的默认是 JSESSIONID -->
        <constructor-arg name="name" value="SHAREJSESSIONID" />
        <!-- jsessionId的path为 / 用于多个系统共享jsessionId -->
        <property name="path" value="/" />
        <property name="httpOnly" value="true"/>
    </bean>
    <!-- sessionManager end-->

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- rememberMeManager管理器，写cookie，取出cookie生成用户信息 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="rememberMeCookie" />
    </bean>
    <!-- 记住我cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- rememberMe是cookie的名字 -->
        <constructor-arg value="rememberMe" />
        <!-- 记住我cookie生效时间30天 -->
        <property name="maxAge" value="2592000" />
    </bean>
</beans>