<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">
	 <!--自动扫描且只扫描@Controller-->
	<context:component-scan base-package="com.newtouch.handlers,com.security.handlers">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!--静态资源映射-->
	<mvc:resources location="/css/" mapping="/css/**"></mvc:resources>
	<mvc:resources location="/images/" mapping="/images/**"></mvc:resources>
	<mvc:resources location="/static/" mapping="/static/*"></mvc:resources>
	<mvc:resources location="/tmp/" mapping="/tmp/**"></mvc:resources>


    <!-- 处理静态资源  ,当访问上面的映射之外的静态资源时，使用SpringMVC默认的servlet处理 -->
    <mvc:default-servlet-handler/>
    
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
		<property name="contentType" value="text/html;charset=UTF-8"></property>
	</bean>
    
    <!-- 使用此标签后，会自动注册ExceptionHandlerExceptionResolver，用于异常的处理
	<mvc:annotation-driven conversion-service="customConcersionService"/>-->
	<!-- 自定义SpringMVC handler的方法的参数的绑定
	    <bean id="customConcersionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
	         <property name="converters">
	           <set>
	           <bean class="com.base.export.typeconversion.ColumnInfoTypeConversion"></bean>
	           </set>
	         </property>
	    </bean>
	-->
	<!--  SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <property name="defaultEncoding" value="utf-8"></property>
	    <property name="maxUploadSize" value="10485760"></property>
	    <property name="uploadTempDir" value="/tmp"></property>
	</bean>
	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException  
                          该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中--> 
	<bean id="simpleMappingExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	    <property name="exceptionMappings">
	         <props>
	            <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>
	         </props>
	    </property>
	</bean>
</beans>
